# entry point
main:
	loadi r100, 6
	loadi sp, stack_begin
	call collatz
	halt

# function: collatz
collatz:
	move r0, r100
	loadi r1, 1
	loadi r2, 2
	loadi r3, 3

loop:
	cmp r0, r1
	je finish
	
	# Check for evenness
	move r100, r0
	push ra
	call is_even
	pop ra
	cmp r100, z
	je handle_even

handle_odd:
	mul r0, r0, r3
	add r0, r0, r1
	j loop

handle_even:
	div r0, r0, r2
	j loop

finish:
	move ip, ra

# function: is_even
is_even:
	push r0
	loadi r0, 1
	and r100, r100, r0
	pop r0
	move ip, ra

stack_end:
	rep 64 db 0
stack_begin: