# TEST: r0 1, r1 1, r2 2, ip 20
# entry point
main:
	loadi r50, 6
	loadi sp, stack_begin
	call collatz
	halt

# function: collatz
collatz:
	move r0, r50
	loadi r1, 1
	loadi r2, 2
	loadi r3, 3

loop:
	cmp r0, r1
	je finish
	
	# Check for evenness
	move r50, r0
	callsv is_even
	cmp r50, z
	je handle_even

handle_odd:
	mul r0, r0, r3
	add r0, r0, r1
	j loop

handle_even:
	div r0, r0, r2
	j loop

finish:
	jr ra

# function: is_even
is_even:
	push r0
	loadi r0, 1
	and r50, r50, r0
	pop r0
	jr ra

stack_end:
	rep 16 dw 0
stack_begin: